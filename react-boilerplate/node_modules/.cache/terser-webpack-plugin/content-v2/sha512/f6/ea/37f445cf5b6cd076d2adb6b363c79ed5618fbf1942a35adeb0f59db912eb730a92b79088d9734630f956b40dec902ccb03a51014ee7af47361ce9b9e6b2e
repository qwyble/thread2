{"map":"{\"version\":3,\"sources\":[\"/Users/lh6q/repos/thread/react-boilerplate/app/App.js\"],\"names\":[\"FontFaceObserver\",\"load\",\"then\",\"document\",\"body\",\"classList\",\"add\",\"store\",\"configureStore\",\"history\",\"MOUNT_NODE\",\"getElementById\",\"_jsx\",\"react_redux__WEBPACK_IMPORTED_MODULE_3__\",\"connected_react_router_immutable__WEBPACK_IMPORTED_MODULE_4__\",\"containers_App_index_js__WEBPACK_IMPORTED_MODULE_8__\",\"render\",\"messages\",\"ReactDOM\",\"_ref\",\"window\",\"Intl\",\"translationMessages\",\"Promise\",\"resolve\",\"all\",\"__webpack_require__\",\"e\",\"t\",\"bind\",\"catch\",\"err\",\"require\",\"install\"],\"mappings\":\"g6BAiCyB,IAAIA,EAAAA,EAAiB,YAAa,IAG1CC,OAAOC,KAAK,WAC3BC,SAASC,KAAKC,UAAUC,IAAI,gBAI9B,IACMC,EAAQC,OAAAA,EAAAA,EAAAA,CADO,GACsBC,EAAAA,GACrCC,EAAaP,SAASQ,eAAe,SAIvCC,EAACC,EAAA,SAAD,CAAUN,MAAOA,QAAjB,EACEK,EAACE,EAAA,gBAAD,CAAiBL,QAASA,EAAAA,QAA1B,EACEG,EAACG,EAAA,EAAD,MAJFC,EAAS,SAAAC,GACbC,EAAAA,EAASF,OAATG,EAMET,IAeCU,OAAOC,KAeVL,EAAOM,EAAAA,qBAdP,IAAIC,QAAQ,SAAAC,GACVA,EAAQD,QAAAE,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAzB,KAAAwB,EAAAE,EAAAC,KAAA,KAAA,uBAAA,OAEP3B,KAAK,WAAA,OACJqB,QAAQE,IAAI,CACVC,EAAAC,EAAA,GAAAzB,KAAAwB,EAAAE,EAAAC,KAAA,KAAA,uBAAA,IACAH,EAAAC,EAAA,GAAAzB,KAAAwB,EAAAE,EAAAC,KAAA,KAAA,uBAAA,QAGH3B,KAAK,WAAA,OAAMc,EAAOM,EAAAA,uBAClBQ,MAAM,SAAAC,GACL,MAAMA,IAUVC,EAAQ,wBAA0BC\",\"sourcesContent\":[\"/**\\n * app.js\\n *\\n * This is the entry file for the application, only setup and boilerplate\\n * code.\\n */\\n\\n// Needed for redux-saga es6 generator support\\nimport '@babel/polyfill';\\n\\n// Import all the third party stuff\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Provider } from 'react-redux';\\nimport { ConnectedRouter } from 'connected-react-router/immutable';\\nimport FontFaceObserver from 'fontfaceobserver';\\nimport history from 'utils/history';\\nimport 'sanitize.css/sanitize.css';\\n\\n// Import root app\\nimport Index from 'containers/App/index.js';\\n\\n// Load the favicon and the .htaccess file\\nimport '!file-loader?name=[name].[ext]!./images/favicon.ico';\\nimport 'file-loader?name=.htaccess!./.htaccess'; // eslint-disable-line import/extensions\\n\\nimport configureStore from './configureStore';\\n\\n// Import i18n messages\\nimport { translationMessages } from './i18n';\\n\\n// Observe loading of Open Sans (to remove open sans, remove the <link> tag in\\n// the index.html file and this observer)\\nconst openSansObserver = new FontFaceObserver('Open Sans', {});\\n\\n// When Open Sans is loaded, add a font-family using Open Sans to the body\\nopenSansObserver.load().then(() => {\\n  document.body.classList.add('fontLoaded');\\n});\\n\\n// Create redux store with history\\nconst initialState = {};\\nconst store = configureStore(initialState, history);\\nconst MOUNT_NODE = document.getElementById('app');\\n\\nconst render = messages => {\\n  ReactDOM.render(\\n    <Provider store={store}>\\n      <ConnectedRouter history={history}>\\n        <Index />\\n      </ConnectedRouter>\\n    </Provider>,\\n    MOUNT_NODE,\\n  );\\n};\\n\\nif (module.hot) {\\n  // Hot reloadable React components and translation json files\\n  // modules.hot.accept does not accept dynamic dependencies,\\n  // have to be constants at compile-time\\n  module.hot.accept(['./i18n', 'containers/App'], () => {\\n    ReactDOM.unmountComponentAtNode(MOUNT_NODE);\\n    render(translationMessages);\\n  });\\n}\\n\\n// Chunked polyfill for browsers without Intl support\\nif (!window.Intl) {\\n  new Promise(resolve => {\\n    resolve(import('intl'));\\n  })\\n    .then(() =>\\n      Promise.all([\\n        import('intl/locale-data/jsonp/en.js'),\\n        import('intl/locale-data/jsonp/de.js'),\\n      ]),\\n    ) // eslint-disable-line prettier/prettier\\n    .then(() => render(translationMessages))\\n    .catch(err => {\\n      throw err;\\n    });\\n} else {\\n  render(translationMessages);\\n}\\n\\n// Install ServiceWorker and AppCache in the end since\\n// it's not most important operation and if main code fails,\\n// we do not want it installed\\nif (process.env.NODE_ENV === 'production') {\\n  require('offline-plugin/runtime').install(); // eslint-disable-line global-require\\n}\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{\"93bf947fafdc82da1f05\":function(e,n,a){\"use strict\";a.r(n);a(\"8c8e4f08a118a28666b0\"),a(\"8af190b70a6bc55c6f1b\");var d,f=a(\"63f14ac74ce296f77f4d\"),t=a.n(f),c=a(\"d7dd51e1bf6bfc2c9c3d\"),o=a(\"accfe20dac886d57b695\"),r=a(\"260f3680b921ede7f717\"),i=a.n(r),l=a(\"5e98cee1846dbfd41421\"),b=(a(\"6735bdf1a3a541ab43fd\"),a(\"6c925591d78ad1124781\")),s=(a(\"9c6be9f00377ac8be3d8\"),a(\"0cbc23df16a5c6ceec4d\"),a(\"1283171292070762fea8\")),u=a(\"0785de3f40b134973d35\");function h(e,n,a,f){d||(d=\"function\"===typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103);var t=e&&e.defaultProps,c=arguments.length-3;if(n||0===c||(n={children:void 0}),n&&t)for(var o in t)void 0===n[o]&&(n[o]=t[o]);else n||(n=t||{});if(1===c)n.children=f;else if(c>1){for(var r=new Array(c),i=0;i<c;i++)r[i]=arguments[i+3];n.children=r}return{$$typeof:d,type:e,key:void 0===a?null:\"\"+a,ref:null,props:n,_owner:null}}new i.a(\"Open Sans\",{}).load().then(function(){document.body.classList.add(\"fontLoaded\")});var p=Object(s.a)({},l.a),w=document.getElementById(\"app\"),v=h(c.Provider,{store:p},void 0,h(o.ConnectedRouter,{history:l.a},void 0,h(b.a,{}))),y=function(e){t.a.render(v,w)};window.Intl?y(u.translationMessages):new Promise(function(e){e(Promise.all([a.e(0),a.e(1)]).then(a.t.bind(null,\"97694e21b72f8e9351c4\",7)))}).then(function(){return Promise.all([a.e(0).then(a.t.bind(null,\"f030ad8f70186ef5cb63\",7)),a.e(0).then(a.t.bind(null,\"14584c41c196d3540f41\",7))])}).then(function(){return y(u.translationMessages)}).catch(function(e){throw e}),a(\"30d14b3a3295666f3aba\").install()}}]);","extractedComments":[]}